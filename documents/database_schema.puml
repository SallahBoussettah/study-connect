@startuml StudyConnect Database Schema

' Color definitions
!define TABLE_BGCOLOR #F5F5F5
!define PK_BGCOLOR #FFCC00
!define FK_BGCOLOR #B3E6FF
!define INDEX_BGCOLOR #E6FFCC

' Styling
skinparam class {
    BackgroundColor TABLE_BGCOLOR
    ArrowColor #333333
    BorderColor #333333
    FontName Arial
}

skinparam note {
    BackgroundColor #FFFFCC
    BorderColor #999999
}

' User table
class "users" as User {
    <b>id</b> : UUID <<PK>>
    email : VARCHAR(255) <<UNIQUE>> <<INDEX>>
    password : VARCHAR(255)
    first_name : VARCHAR(100)
    last_name : VARCHAR(100)
    role : ENUM('student', 'admin')
    avatar : VARCHAR(255)
    bio : TEXT
    institution : VARCHAR(255)
    major : VARCHAR(100)
    year_of_study : VARCHAR(50)
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    last_login : TIMESTAMP
    email_verified : BOOLEAN
    is_active : BOOLEAN
}

' User preferences table
class "user_preferences" as UserPreferences {
    <b>id</b> : UUID <<PK>>
    user_id : UUID <<FK>>
    notification_email : BOOLEAN
    notification_push : BOOLEAN
    theme : VARCHAR(50)
    language : VARCHAR(50)
    timezone : VARCHAR(100)
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
}

' User subjects/interests
class "user_subjects" as UserSubjects {
    <b>id</b> : UUID <<PK>>
    user_id : UUID <<FK>>
    subject_id : UUID <<FK>>
    proficiency_level : ENUM('beginner', 'intermediate', 'advanced')
    is_teaching : BOOLEAN
    created_at : TIMESTAMP
}

' Subjects/Topics table
class "subjects" as Subject {
    <b>id</b> : UUID <<PK>>
    name : VARCHAR(100) <<UNIQUE>> <<INDEX>>
    category : VARCHAR(100) <<INDEX>>
    description : TEXT
    icon : VARCHAR(255)
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
}

' Study Room table
class "study_rooms" as StudyRoom {
    <b>id</b> : UUID <<PK>>
    name : VARCHAR(255) <<INDEX>>
    description : TEXT
    subject_id : UUID <<FK>>
    owner_id : UUID <<FK>>
    is_private : BOOLEAN
    access_code : VARCHAR(50)
    max_members : INTEGER
    image : VARCHAR(255)
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    last_active : TIMESTAMP
    status : ENUM('active', 'archived', 'deleted')
}

' Study Room Members
class "study_room_members" as StudyRoomMember {
    <b>id</b> : UUID <<PK>>
    room_id : UUID <<FK>>
    user_id : UUID <<FK>>
    role : ENUM('owner', 'moderator', 'member')
    joined_at : TIMESTAMP
    last_active_at : TIMESTAMP
    is_favorite : BOOLEAN
    status : ENUM('active', 'inactive', 'banned')
}

' Study Room Join Requests
class "study_room_requests" as StudyRoomRequest {
    <b>id</b> : UUID <<PK>>
    room_id : UUID <<FK>>
    user_id : UUID <<FK>>
    message : TEXT
    status : ENUM('pending', 'approved', 'rejected')
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    response_message : TEXT
    responded_by : UUID <<FK>>
}

' Messages table
class "messages" as Message {
    <b>id</b> : UUID <<PK>>
    room_id : UUID <<FK>>
    sender_id : UUID <<FK>>
    content : TEXT
    is_system : BOOLEAN
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    is_edited : BOOLEAN
    parent_id : UUID <<FK>> ' For threaded replies
    read_by : JSONB ' Array of user IDs who read the message
}

' Resources table
class "resources" as Resource {
    <b>id</b> : UUID <<PK>>
    title : VARCHAR(255) <<INDEX>>
    description : TEXT
    file_url : VARCHAR(255)
    file_type : VARCHAR(50) <<INDEX>>
    file_size : INTEGER
    uploaded_by : UUID <<FK>>
    room_id : UUID <<FK>>
    is_public : BOOLEAN
    download_count : INTEGER
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    tags : JSONB ' Array of tags
}

' Events/Study Sessions table
class "events" as Event {
    <b>id</b> : UUID <<PK>>
    title : VARCHAR(255)
    description : TEXT
    room_id : UUID <<FK>>
    created_by : UUID <<FK>>
    start_time : TIMESTAMP <<INDEX>>
    end_time : TIMESTAMP
    is_recurring : BOOLEAN
    recurrence_pattern : VARCHAR(100)
    reminder_time : INTEGER ' Minutes before event
    location : VARCHAR(255)
    meeting_link : VARCHAR(255)
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    status : ENUM('scheduled', 'ongoing', 'completed', 'cancelled')
}

' Event Attendees
class "event_attendees" as EventAttendee {
    <b>id</b> : UUID <<PK>>
    event_id : UUID <<FK>>
    user_id : UUID <<FK>>
    status : ENUM('attending', 'maybe', 'declined')
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    reminder_sent : BOOLEAN
}

' Flashcard Decks
class "flashcard_decks" as FlashcardDeck {
    <b>id</b> : UUID <<PK>>
    title : VARCHAR(255) <<INDEX>>
    description : TEXT
    owner_id : UUID <<FK>>
    subject_id : UUID <<FK>>
    is_public : BOOLEAN
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    card_count : INTEGER
    study_count : INTEGER
}

' Flashcards
class "flashcards" as Flashcard {
    <b>id</b> : UUID <<PK>>
    deck_id : UUID <<FK>>
    front_content : TEXT
    back_content : TEXT
    created_at : TIMESTAMP
    updated_at : TIMESTAMP
    difficulty : ENUM('easy', 'medium', 'hard')
    position : INTEGER
}

' Study Sessions (for tracking study time)
class "study_sessions" as StudySession {
    <b>id</b> : UUID <<PK>>
    user_id : UUID <<FK>>
    room_id : UUID <<FK>>
    start_time : TIMESTAMP
    end_time : TIMESTAMP
    duration : INTEGER ' In seconds
    focus_score : INTEGER ' 0-100
    notes : TEXT
    created_at : TIMESTAMP
}

' Notifications
class "notifications" as Notification {
    <b>id</b> : UUID <<PK>>
    user_id : UUID <<FK>>
    title : VARCHAR(255)
    content : TEXT
    type : VARCHAR(50) <<INDEX>>
    related_id : UUID ' ID of the related entity (room, message, etc.)
    is_read : BOOLEAN
    created_at : TIMESTAMP
    action_url : VARCHAR(255)
}

' Relationships
User "1" -- "1" UserPreferences : has
User "1" -- "*" UserSubjects : has
User "1" -- "*" StudyRoom : owns
User "1" -- "*" StudyRoomMember : participates
User "1" -- "*" Message : sends
User "1" -- "*" Resource : uploads
User "1" -- "*" Event : creates
User "1" -- "*" EventAttendee : attends
User "1" -- "*" FlashcardDeck : owns
User "1" -- "*" StudySession : tracks
User "1" -- "*" Notification : receives
User "1" -- "*" StudyRoomRequest : requests

Subject "1" -- "*" StudyRoom : categorizes
Subject "1" -- "*" UserSubjects : studied by
Subject "1" -- "*" FlashcardDeck : categorizes

StudyRoom "1" -- "*" StudyRoomMember : contains
StudyRoom "1" -- "*" Message : contains
StudyRoom "1" -- "*" Resource : contains
StudyRoom "1" -- "*" Event : hosts
StudyRoom "1" -- "*" StudyRoomRequest : receives
StudyRoom "1" -- "*" StudySession : hosts

Event "1" -- "*" EventAttendee : has

FlashcardDeck "1" -- "*" Flashcard : contains

Message "*" -- "0..1" Message : replies to

note "All tables should include soft delete functionality\nwith deleted_at timestamp and is_deleted boolean" as N1
note "UUID is used for all primary keys to enhance security\nand facilitate potential future data migration" as N2
note "Indexes should be created on all foreign keys\nand frequently queried fields for performance" as N3

@enduml 